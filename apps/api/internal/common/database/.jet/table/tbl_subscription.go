//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SubscriptionTable = newTblSubscription("public", "tbl_subscription", "")

type tblSubscription struct {
	postgres.Table

	// Columns
	UserID             postgres.ColumnString
	PlanOfferingID     postgres.ColumnString
	CanceledAt         postgres.ColumnTimestampz
	CancellationReason postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
	DefaultColumns postgres.ColumnList
}

type TblSubscription struct {
	tblSubscription

	EXCLUDED tblSubscription
}

// AS creates new TblSubscription with assigned alias
func (a TblSubscription) AS(alias string) *TblSubscription {
	return newTblSubscription(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TblSubscription with assigned schema name
func (a TblSubscription) FromSchema(schemaName string) *TblSubscription {
	return newTblSubscription(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TblSubscription with assigned table prefix
func (a TblSubscription) WithPrefix(prefix string) *TblSubscription {
	return newTblSubscription(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TblSubscription with assigned table suffix
func (a TblSubscription) WithSuffix(suffix string) *TblSubscription {
	return newTblSubscription(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTblSubscription(schemaName, tableName, alias string) *TblSubscription {
	return &TblSubscription{
		tblSubscription: newTblSubscriptionImpl(schemaName, tableName, alias),
		EXCLUDED:        newTblSubscriptionImpl("", "excluded", ""),
	}
}

func newTblSubscriptionImpl(schemaName, tableName, alias string) tblSubscription {
	var (
		UserIDColumn             = postgres.StringColumn("user_id")
		PlanOfferingIDColumn     = postgres.StringColumn("plan_offering_id")
		CanceledAtColumn         = postgres.TimestampzColumn("canceled_at")
		CancellationReasonColumn = postgres.IntegerColumn("cancellation_reason")
		allColumns               = postgres.ColumnList{UserIDColumn, PlanOfferingIDColumn, CanceledAtColumn, CancellationReasonColumn}
		mutableColumns           = postgres.ColumnList{PlanOfferingIDColumn, CanceledAtColumn, CancellationReasonColumn}
		defaultColumns           = postgres.ColumnList{}
	)

	return tblSubscription{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		UserID:             UserIDColumn,
		PlanOfferingID:     PlanOfferingIDColumn,
		CanceledAt:         CanceledAtColumn,
		CancellationReason: CancellationReasonColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
