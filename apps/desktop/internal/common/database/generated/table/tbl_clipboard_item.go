//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var ClipboardItemTable = newTblClipboardItem("", "tbl_clipboard_item", "")

type tblClipboardItem struct {
	sqlite.Table

	// Columns
	ID        sqlite.ColumnString
	Content   sqlite.ColumnString
	Type      sqlite.ColumnString
	CreatedAt sqlite.ColumnInteger
	IsPinned  sqlite.ColumnBool
	PinnedAt  sqlite.ColumnInteger

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
	DefaultColumns sqlite.ColumnList
}

type TblClipboardItem struct {
	tblClipboardItem

	EXCLUDED tblClipboardItem
}

// AS creates new TblClipboardItem with assigned alias
func (a TblClipboardItem) AS(alias string) *TblClipboardItem {
	return newTblClipboardItem(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TblClipboardItem with assigned schema name
func (a TblClipboardItem) FromSchema(schemaName string) *TblClipboardItem {
	return newTblClipboardItem(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TblClipboardItem with assigned table prefix
func (a TblClipboardItem) WithPrefix(prefix string) *TblClipboardItem {
	return newTblClipboardItem(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TblClipboardItem with assigned table suffix
func (a TblClipboardItem) WithSuffix(suffix string) *TblClipboardItem {
	return newTblClipboardItem(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTblClipboardItem(schemaName, tableName, alias string) *TblClipboardItem {
	return &TblClipboardItem{
		tblClipboardItem: newTblClipboardItemImpl(schemaName, tableName, alias),
		EXCLUDED:         newTblClipboardItemImpl("", "excluded", ""),
	}
}

func newTblClipboardItemImpl(schemaName, tableName, alias string) tblClipboardItem {
	var (
		IDColumn        = sqlite.StringColumn("id")
		ContentColumn   = sqlite.StringColumn("content")
		TypeColumn      = sqlite.StringColumn("type")
		CreatedAtColumn = sqlite.IntegerColumn("created_at")
		IsPinnedColumn  = sqlite.BoolColumn("is_pinned")
		PinnedAtColumn  = sqlite.IntegerColumn("pinned_at")
		allColumns      = sqlite.ColumnList{IDColumn, ContentColumn, TypeColumn, CreatedAtColumn, IsPinnedColumn, PinnedAtColumn}
		mutableColumns  = sqlite.ColumnList{ContentColumn, TypeColumn, CreatedAtColumn, IsPinnedColumn, PinnedAtColumn}
		defaultColumns  = sqlite.ColumnList{}
	)

	return tblClipboardItem{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		Content:   ContentColumn,
		Type:      TypeColumn,
		CreatedAt: CreatedAtColumn,
		IsPinned:  IsPinnedColumn,
		PinnedAt:  PinnedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
