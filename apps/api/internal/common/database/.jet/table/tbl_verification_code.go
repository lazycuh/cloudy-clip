//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var VerificationCodeTable = newTblVerificationCode("public", "tbl_verification_code", "")

type tblVerificationCode struct {
	postgres.Table

	// Columns
	VerificationCodeID postgres.ColumnString
	VerificationType   postgres.ColumnInteger
	CreatedAt          postgres.ColumnTimestampz
	UserID             postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
	DefaultColumns postgres.ColumnList
}

type TblVerificationCode struct {
	tblVerificationCode

	EXCLUDED tblVerificationCode
}

// AS creates new TblVerificationCode with assigned alias
func (a TblVerificationCode) AS(alias string) *TblVerificationCode {
	return newTblVerificationCode(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TblVerificationCode with assigned schema name
func (a TblVerificationCode) FromSchema(schemaName string) *TblVerificationCode {
	return newTblVerificationCode(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TblVerificationCode with assigned table prefix
func (a TblVerificationCode) WithPrefix(prefix string) *TblVerificationCode {
	return newTblVerificationCode(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TblVerificationCode with assigned table suffix
func (a TblVerificationCode) WithSuffix(suffix string) *TblVerificationCode {
	return newTblVerificationCode(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTblVerificationCode(schemaName, tableName, alias string) *TblVerificationCode {
	return &TblVerificationCode{
		tblVerificationCode: newTblVerificationCodeImpl(schemaName, tableName, alias),
		EXCLUDED:            newTblVerificationCodeImpl("", "excluded", ""),
	}
}

func newTblVerificationCodeImpl(schemaName, tableName, alias string) tblVerificationCode {
	var (
		VerificationCodeIDColumn = postgres.StringColumn("verification_code_id")
		VerificationTypeColumn   = postgres.IntegerColumn("verification_type")
		CreatedAtColumn          = postgres.TimestampzColumn("created_at")
		UserIDColumn             = postgres.StringColumn("user_id")
		allColumns               = postgres.ColumnList{VerificationCodeIDColumn, VerificationTypeColumn, CreatedAtColumn, UserIDColumn}
		mutableColumns           = postgres.ColumnList{VerificationTypeColumn, CreatedAtColumn, UserIDColumn}
		defaultColumns           = postgres.ColumnList{CreatedAtColumn}
	)

	return tblVerificationCode{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		VerificationCodeID: VerificationCodeIDColumn,
		VerificationType:   VerificationTypeColumn,
		CreatedAt:          CreatedAtColumn,
		UserID:             UserIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
