//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PlanTable = newTblPlan("public", "tbl_plan", "")

type tblPlan struct {
	postgres.Table

	// Columns
	PlanID      postgres.ColumnString
	DisplayName postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
	DefaultColumns postgres.ColumnList
}

type TblPlan struct {
	tblPlan

	EXCLUDED tblPlan
}

// AS creates new TblPlan with assigned alias
func (a TblPlan) AS(alias string) *TblPlan {
	return newTblPlan(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TblPlan with assigned schema name
func (a TblPlan) FromSchema(schemaName string) *TblPlan {
	return newTblPlan(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TblPlan with assigned table prefix
func (a TblPlan) WithPrefix(prefix string) *TblPlan {
	return newTblPlan(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TblPlan with assigned table suffix
func (a TblPlan) WithSuffix(suffix string) *TblPlan {
	return newTblPlan(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTblPlan(schemaName, tableName, alias string) *TblPlan {
	return &TblPlan{
		tblPlan:  newTblPlanImpl(schemaName, tableName, alias),
		EXCLUDED: newTblPlanImpl("", "excluded", ""),
	}
}

func newTblPlanImpl(schemaName, tableName, alias string) tblPlan {
	var (
		PlanIDColumn      = postgres.StringColumn("plan_id")
		DisplayNameColumn = postgres.StringColumn("display_name")
		allColumns        = postgres.ColumnList{PlanIDColumn, DisplayNameColumn}
		mutableColumns    = postgres.ColumnList{DisplayNameColumn}
		defaultColumns    = postgres.ColumnList{}
	)

	return tblPlan{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		PlanID:      PlanIDColumn,
		DisplayName: DisplayNameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
