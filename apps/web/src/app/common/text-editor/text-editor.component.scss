@use 'sass:color';

@use '@lazycuh/web-ui-common' as lc;

@import 'node_modules/tippy.js/dist/tippy.css';
@import 'node_modules/tippy.js/animations/scale.css';

$tool-size: 20px;
$border-color--default: color.scale(lc.$text-color--default, $lightness: -70%);
$border-color--focused: color.scale(lc.$text-color--default, $lightness: -40%);

.text-editor {
    position: relative;
    display: flex;
    flex-flow: column;
    box-sizing: border-box;
    border-radius: 8px;
    border: 1px solid $border-color--default;
    transition: lc.transition(border-color);

    &.has-focus {
        border-color: $border-color--focused;

        .text-editor__tool-strip {
            border-color: $border-color--focused;
        }
    }

    .tiptap {
        outline: none;
        height: lc.length(70);
        overflow-y: auto;
        white-space: pre-wrap;
        width: 100%;
        padding: #{lc.length(4)} #{lc.length(5)};
        box-sizing: border-box;

        strong {
            color: inherit;
        }

        // When resizing table
        &.resize-cursor {
            cursor: ew-resize;
        }

        a,
        a strong {
            color: lc.$link-text-color;
        }

        mark {
            border-radius: 3px;
            padding: 0 3px;
        }

        blockquote {
            margin: 0;
            padding: #{lc.length(2)} #{lc.length(5)} #{lc.length(2)} #{lc.length(13)};
            border-left: 4px solid rgb(90, 90, 90);
            background-color: rgb(28, 28, 28);
            border-radius: 4px;
            border-top-right-radius: 8px;
            border-bottom-right-radius: 8px;
            width: 80%;
            left: 50%;
            transform: translateX(-50%);
            font-size: calc(var(--default-font-size) + 3px);
            color: #d5b6b6;
            position: relative;

            &::before {
                content: '\201c';
                position: absolute;
                font-size: 4rem;
                left: 16px;
                top: 0;
                color: #e4ded4;
            }
        }

        table {
            border-spacing: 0;
            table-layout: auto;
            white-space: normal;
            background-color: transparent;
            border: 1px solid #414141;
            border-radius: 4px;
            overflow: hidden;
        }

        tbody {
            font-family: var(--mat-table-row-item-label-text-font, var(--mat-sys-body-medium-font, Roboto, sans-serif));
            line-height: var(--mat-table-row-item-label-text-line-height, var(--mat-sys-body-medium-line-height));
            overflow: hidden;
            font-size: var(--default-font-size);
        }

        tbody tr:first-of-type th {
            height: lc.length(14);
            background-color: rgb(40, 40, 40);
            letter-spacing: var(--mat-table-header-headline-tracking, var(--mat-sys-title-small-tracking));
            line-height: inherit;
            box-sizing: border-box;
            outline: none;
            text-align: left;
            font-size: var(--default-font-size);
            color: #e1e1e1;
            font-weight: 700;
            padding: 0 #{lc.length(2)};
        }

        .selectedCell {
            background-color: #00e5ff26 !important;
        }

        td {
            padding: 0 #{lc.length(2)};
        }

        tr:not(:last-of-type) td,
        th {
            border-bottom: 1px solid #414141;
        }

        th:not(:last-of-type),
        td:not(:last-of-type) {
            border-right: 1px solid #414141;
        }

        figure {
            text-align: center;
            margin: 0;
        }

        img {
            max-width: 100%;
            cursor: pointer;
            position: relative;
            left: 50%;
            transform: translateX(-50%);
        }

        figcaption {
            color: #8e8e8e;
        }

        img.ProseMirror-selectednode {
            box-shadow: 0 0 2px 2px #00c5ff;
            border-radius: 4px;
            transition: lc.transition(box-shadow);
        }

        .ProseMirror-gapcursor {
            width: 2px;
            height: 20px;
            background: gray;
            display: block;
        }
    }

    [data-tippy-root] {
        z-index: 1000;
    }
}

.text-editor__tool-strip {
    display: flex;
    position: relative;
    align-items: center;
    height: 60px;
    border-bottom: 1px solid $border-color--default;
    padding: 0 #{lc.length(1)};
    overflow-x: auto;

    .lc-icon-button {
        &:not(:disabled) {
            --lc-button-text-color: #{color.scale(lc.$text-color--default, $lightness: -30%)};
        }

        &:not(:last-of-type) {
            margin-right: lc.length(-3);
        }

        &.is-active {
            --lc-button-text-color: #fff !important;
        }

        &.heading-toggle {
            margin-right: -6px;

            .lc-icon {
                width: #{$tool-size + 4px};
                height: #{$tool-size + 4px};
            }
        }

        &.text-alignment {
            margin-left: lc.length(1);

            .lc-icon {
                width: #{$tool-size - 1};
                height: #{$tool-size - 1};
            }
        }

        .lc-icon {
            width: $tool-size;
            height: $tool-size;

            svg {
                width: inherit;
                height: inherit;
            }
        }
    }
}

.text-editor__tool-strip__group {
    display: flex;
    align-items: center;
}

.text-editor__tool-strip__group:not(:last-of-type)::after {
    content: '';
    display: inline-block;
    margin-right: lc.length(1);
    height: 20px;
    width: 2px;
    background-color: rgb(39, 39, 39);
    margin: 0 8px;
}

.text-editor__resize-handle {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    flex-flow: column;
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translate(-50%, 24px);
    width: 70px;
    height: 28px;
    padding-top: 1px;
    z-index: 10;
    cursor: ns-resize;
    color: #616161;

    &::before {
        display: none;
    }

    &:hover,
    &.is-dragging {
        color: #ddd;
    }
}

.text-editor__bubble-menu {
    button {
        --lc-button-text-color: #fff;

        border-radius: 0.5rem;
        font-size: 0.875rem;
        font-weight: 500;
        line-height: 1.15;
        padding: 0.375rem 0.625rem;
        min-height: initial;
        min-width: initial;

        &.is-active {
            --lc-button-bg-color: rgba(255, 255, 255, 0.15);
        }

        &:not(:last-of-type) {
            margin-right: lc.length(1);
        }
    }
}

.text-editor__link-editor .focus-box {
    padding-top: 0 !important;
    width: min(90vw, 500px) !important;

    .action-container {
        margin-top: 0 !important;
    }
}

.text-editor__text-alignment-options,
.table-controller__removal-options {
    display: flex;
    flex-flow: column;

    button {
        border-radius: 6px;
        justify-content: flex-start;
        color: #fff;
        padding: 0 #{lc.length(2)};

        &.is-active {
            color: #9bb9ff;
        }
    }
}

.text-editor__text-alignment-options {
    button {
        min-height: 44px;
    }

    .lc-button__label {
        display: inline-block;
        width: lc.length(20);
        text-align: left;
    }
}

.text-editor__tooltip-with-keyboard-shortcut {
    display: flex;
    align-items: center;

    .keyboard-shortcut {
        --keyboard-shortcut-key-box-shadow: #{lc.$box-shadow};
    }
}

.text-editor__status-bar {
    height: lc.length(10);
    display: flex;
    align-items: center;
    background-color: rgb(71 70 70 / 15%);
    border-top: 1px solid rgba(255, 255, 255, 0.02);
    font-size: small;
    padding: 0 lc.length(2);
    color: #00ad9f;
}

.text-editor__status-bar__auto-save-result {
    display: flex;
    align-items: center;

    &.is-failure {
        color: red;
    }

    & > .lc-icon {
        margin-right: lc.length(1);
    }

    .lc-icon {
        width: 16px;
        height: 16px;
    }
}

////////////////////
////////////////////
////////////////////
////////////////////
////////////////////
////////////////////
figcaption.caption {
    position: relative;
    min-height: 1.5em;
}

figcaption.caption::before {
    content: 'Click to add a caption...';
    color: #aaa;
    font-style: italic;
    position: absolute;
    left: 0;
    top: 0;
    pointer-events: none;
    opacity: 0;
}

figcaption.caption[data-placeholder-visible='true']::before {
    opacity: 1;
}
