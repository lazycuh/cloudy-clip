//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PaymentMethodTable = newTblPaymentMethod("public", "tbl_payment_method", "")

type tblPaymentMethod struct {
	postgres.Table

	// Columns
	PaymentMethodID postgres.ColumnString // Will be stripe's payment method ID
	ExpMonth        postgres.ColumnString
	ExpYear         postgres.ColumnString
	Last4           postgres.ColumnString
	Brand           postgres.ColumnString
	IsDefault       postgres.ColumnBool
	IsDeleted       postgres.ColumnBool
	UserID          postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
	DefaultColumns postgres.ColumnList
}

type TblPaymentMethod struct {
	tblPaymentMethod

	EXCLUDED tblPaymentMethod
}

// AS creates new TblPaymentMethod with assigned alias
func (a TblPaymentMethod) AS(alias string) *TblPaymentMethod {
	return newTblPaymentMethod(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TblPaymentMethod with assigned schema name
func (a TblPaymentMethod) FromSchema(schemaName string) *TblPaymentMethod {
	return newTblPaymentMethod(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TblPaymentMethod with assigned table prefix
func (a TblPaymentMethod) WithPrefix(prefix string) *TblPaymentMethod {
	return newTblPaymentMethod(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TblPaymentMethod with assigned table suffix
func (a TblPaymentMethod) WithSuffix(suffix string) *TblPaymentMethod {
	return newTblPaymentMethod(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTblPaymentMethod(schemaName, tableName, alias string) *TblPaymentMethod {
	return &TblPaymentMethod{
		tblPaymentMethod: newTblPaymentMethodImpl(schemaName, tableName, alias),
		EXCLUDED:         newTblPaymentMethodImpl("", "excluded", ""),
	}
}

func newTblPaymentMethodImpl(schemaName, tableName, alias string) tblPaymentMethod {
	var (
		PaymentMethodIDColumn = postgres.StringColumn("payment_method_id")
		ExpMonthColumn        = postgres.StringColumn("exp_month")
		ExpYearColumn         = postgres.StringColumn("exp_year")
		Last4Column           = postgres.StringColumn("last4")
		BrandColumn           = postgres.StringColumn("brand")
		IsDefaultColumn       = postgres.BoolColumn("is_default")
		IsDeletedColumn       = postgres.BoolColumn("is_deleted")
		UserIDColumn          = postgres.StringColumn("user_id")
		allColumns            = postgres.ColumnList{PaymentMethodIDColumn, ExpMonthColumn, ExpYearColumn, Last4Column, BrandColumn, IsDefaultColumn, IsDeletedColumn, UserIDColumn}
		mutableColumns        = postgres.ColumnList{ExpMonthColumn, ExpYearColumn, Last4Column, BrandColumn, IsDefaultColumn, IsDeletedColumn, UserIDColumn}
		defaultColumns        = postgres.ColumnList{}
	)

	return tblPaymentMethod{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		PaymentMethodID: PaymentMethodIDColumn,
		ExpMonth:        ExpMonthColumn,
		ExpYear:         ExpYearColumn,
		Last4:           Last4Column,
		Brand:           BrandColumn,
		IsDefault:       IsDefaultColumn,
		IsDeleted:       IsDeletedColumn,
		UserID:          UserIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
		DefaultColumns: defaultColumns,
	}
}
